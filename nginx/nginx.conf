events {}

http {
    server {
        listen 80;
        server_name bagel.ac www.bagel.ac;

        location /.well-known/acme-challenge/ {
            alias /var/www/certbot/;
            default_type "text/plain";
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name bagel.ac www.bagel.ac;

        ssl_certificate /etc/nginx/ssl/live/bagel.ac/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/bagel.ac/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Proxy API requests to the Go server
        location /api/ {
            proxy_pass http://bagel-app:4000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy all other requests to the web frontend
        location / {
            proxy_pass http://bagel-web:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
