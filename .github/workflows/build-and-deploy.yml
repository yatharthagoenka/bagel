name: Build and Deploy to Remote

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      WEB_IMAGE_NAME: ${{ secrets.DOCKERHUB_USER }}/bagel-web:latest
      APP_IMAGE_NAME: ${{ secrets.DOCKERHUB_USER }}/bagel-app:latest
      NGINX_IMAGE_NAME: ${{ secrets.DOCKERHUB_USER }}/nginx:latest
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push bagel-web Docker image
        run: |
          if git diff --quiet HEAD^ HEAD -- web; then
            echo "No changes in 'web' directory. Skipping web image build/push."
            exit 0
          fi
          docker build --build-arg NODE_ENV=production --build-arg REACT_APP_GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID -t $WEB_IMAGE_NAME ./web
          docker push $WEB_IMAGE_NAME

      - name: Build and push bagel-app Docker image
        run: |
          if git diff --quiet HEAD^ HEAD -- app; then
            echo "No changes in 'app' directory. Skipping APP image build/push."
            exit 0
          fi
          docker build -t $APP_IMAGE_NAME ./app
          docker push $APP_IMAGE_NAME

      - name: Build and push nginx Docker image
        run: |
          if git diff --quiet HEAD^ HEAD -- nginx; then
            echo "No changes in 'nginx' directory. Skipping nginx image build/push."
            exit 0
          fi
          docker build -t $NGINX_IMAGE_NAME ./nginx
          docker push $NGINX_IMAGE_NAME

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MAC_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to Remote
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "mkdir -p /home/${{ secrets.VM_USER }}/bagel"
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no \
            ./docker-compose.yml ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USER }}/bagel/docker-compose.yml

      - name: Deploy on Remote via SSH
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "
            echo 'WEB_IMAGE_NAME=${{ secrets.DOCKERHUB_USER }}/bagel-web:latest' > ~/bagel/.env && \
            echo 'APP_IMAGE_NAME=${{ secrets.DOCKERHUB_USER }}/bagel-app:latest' >> ~/bagel/.env && \
            echo 'NGINX_IMAGE_NAME=${{ secrets.DOCKERHUB_USER }}/nginx:latest' >> ~/bagel/.env && \
            echo 'GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}' >> ~/bagel/.env && \
            echo 'USER_COLLECTION=${{ secrets.USER_COLLECTION }}' >> ~/bagel/.env && \
            cd ~/bagel && \
            sudo docker-compose down && \
            sudo docker-compose pull && \
            sudo docker-compose up -d --remove-orphans
          "

        